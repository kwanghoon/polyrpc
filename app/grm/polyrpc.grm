CFG "TopLevel'" [
 ProductionRule "TopLevel'" [Nonterminal "TopLevel"],
 ProductionRule "Identifiers" [Terminal "identifier"],
 ProductionRule "Identifiers" [Terminal "identifier", Nonterminal "Identifiers"],
 ProductionRule "OptIdentifiers" [],
 ProductionRule "OptIdentifiers" [Nonterminal "Identifiers"],
 ProductionRule "IdentifierCommas" [Terminal "identifier"],
 ProductionRule "IdentifierCommas" [Terminal "identifier", Terminal ",", Nonterminal "IdentifierCommas"],
 ProductionRule "OptIdentifierCommas" [],
 ProductionRule "OptIdentifierCommas" [Nonterminal "IdentifierCommas"],
 ProductionRule "Location" [Terminal "identifier"],
 ProductionRule "Locations" [Nonterminal "Identifiers"],
 ProductionRule "Type" [Nonterminal "LocFunType"],
 ProductionRule "Type" [Terminal "{", Nonterminal "Identifiers", Terminal "}", Terminal ".", Nonterminal "Type"],
 ProductionRule "Type" [Terminal "[", Nonterminal "Identifiers", Terminal "]", Terminal ".", Nonterminal "Type"],
 ProductionRule "LocFunType" [Nonterminal "AppType"],
 ProductionRule "LocFunType" [Nonterminal "AppType", Terminal "LocFun", Nonterminal "LocFunType"],
 ProductionRule "AppType" [Nonterminal "AtomicType"],
 ProductionRule "AppType" [Nonterminal "AppType", Terminal "{", Nonterminal "Locations", Terminal "}"],
 ProductionRule "AppType" [Nonterminal "AppType", Terminal "[", Nonterminal "LocFunTypes", Terminal "]"],
 ProductionRule "AtomicType" [Nonterminal "TupleType"],
 ProductionRule "AtomicType" [Terminal "(", Nonterminal "Type", Terminal ")"],
 ProductionRule "AtomicType" [Terminal "identifier"],
 ProductionRule "TupleType" [Terminal "(", Nonterminal "Type", Terminal ",", Nonterminal "TypeSeq", Terminal ")"],
 ProductionRule "TypeSeq" [Nonterminal "Type"],
 ProductionRule "TypeSeq" [Nonterminal "Type", Terminal ",", Nonterminal "TypeSeq"],
 ProductionRule "LocFunTypes" [Nonterminal "LocFunType"],
 ProductionRule "LocFunTypes" [Nonterminal "LocFunType", Nonterminal "LocFunTypes"],
 ProductionRule "OptLocFunTypes" [],
 ProductionRule "OptLocFunTypes" [Nonterminal "LocFunTypes"],
 ProductionRule "TopLevel" [Nonterminal "Binding"],
 ProductionRule "TopLevel" [Nonterminal "Binding", Terminal ";", Nonterminal "TopLevel"],
 ProductionRule "TopLevel" [Nonterminal "DataTypeDecl"],
 ProductionRule "TopLevel" [Nonterminal "DataTypeDecl", Terminal ";", Nonterminal "TopLevel"],
 ProductionRule "DataTypeDecl" [Terminal "data", Terminal "identifier", Terminal "=", Nonterminal "DataTypeDeclRHS"],
 ProductionRule "DataTypeDeclRHS" [Nonterminal "TypeConDecls"],
 ProductionRule "DataTypeDeclRHS" [Terminal "{", Nonterminal "Identifiers", Terminal "}", Terminal ".", Nonterminal "DataTypeDeclRHS"],
 ProductionRule "DataTypeDeclRHS" [Terminal "[", Nonterminal "Identifiers", Terminal "]", Terminal ".", Nonterminal "DataTypeDeclRHS"],
 ProductionRule "TypeConDecl" [Terminal "identifier", Nonterminal "OptLocFunTypes"],
 ProductionRule "TypeConDecls" [Nonterminal "TypeConDecl"],
 ProductionRule "TypeConDecls" [Nonterminal "TypeConDecl", Terminal "|", Nonterminal "TypeConDecls"],
 ProductionRule "Binding" [Terminal "identifier", Terminal ":", Nonterminal "Type", Terminal "=", Nonterminal "LExpr"],
 ProductionRule "Bindings" [Nonterminal "Binding"],
 ProductionRule "Bindings" [Nonterminal "Binding", Terminal ";", Nonterminal "Bindings"],
 ProductionRule "LExpr" [Terminal "{", Nonterminal "Identifiers", Terminal "}", Terminal ".", Nonterminal "LExpr"],
 ProductionRule "LExpr" [Terminal "[", Nonterminal "Identifiers", Terminal "]", Terminal ".", Nonterminal "LExpr"],
 ProductionRule "LExpr" [Terminal "\\", Nonterminal "IdTypeLocSeq", Terminal ".", Nonterminal "LExpr"],
 ProductionRule "LExpr" [Terminal "let", Terminal "{", Nonterminal "Bindings", Terminal "}", Nonterminal "LExpr", Terminal "end"],
 ProductionRule "LExpr" [Terminal "if", Nonterminal "Expr", Terminal "then", Nonterminal "LExpr", Terminal "else", Nonterminal "LExpr"],
 ProductionRule "LExpr" [Terminal "case", Nonterminal "Expr", Terminal "{", Nonterminal "Alternatives", Terminal "}"],
 ProductionRule "LExpr" [Nonterminal "Expr"],
 ProductionRule "IdTypeLocSeq" [Nonterminal "IdTypeLoc"],
 ProductionRule "IdTypeLocSeq" [Nonterminal "IdTypeLoc", Nonterminal "IdTypeLocSeq"],
 ProductionRule "IdTypeLoc" [Terminal "identifier", Terminal ":", Nonterminal "Type", Terminal "@", Nonterminal "Location"],
 ProductionRule "Alternatives" [Nonterminal "Alternative"],
 ProductionRule "Alternatives" [Nonterminal "Alternative", Terminal ";", Nonterminal "Alternatives"],
 ProductionRule "Alternative" [Terminal "identifier", Nonterminal "OptIdentifiers", Terminal "=>", Nonterminal "LExpr"],
 ProductionRule "Alternative" [Terminal "(", Nonterminal "OptIdentifierCommas", Terminal ")", Terminal "=>", Nonterminal "LExpr"],
 ProductionRule "Expr" [Nonterminal "Expr", Nonterminal "Term"],
 ProductionRule "Expr" [Nonterminal "Expr", Terminal "[", Nonterminal "LocFunTypes", Terminal "]"],
 ProductionRule "Expr" [Nonterminal "Expr", Terminal "{", Nonterminal "Identifiers", Terminal "}"],
 ProductionRule "Expr" [Nonterminal "Tuple"],
 ProductionRule "Expr" [Nonterminal "AssignExpr"],
 ProductionRule "Tuple" [Terminal "(", Nonterminal "LExpr", Terminal ",", Nonterminal "LExprSeq", Terminal ")"],
 ProductionRule "LExprSeq" [Nonterminal "LExpr"],
 ProductionRule "LExprSeq" [Nonterminal "LExpr", Terminal ",", Nonterminal "LExprSeq"],
 ProductionRule "AssignExpr" [Nonterminal "DerefExpr"],
 ProductionRule "AssignExpr" [Nonterminal "DerefExpr", Terminal ":=", Terminal "{", Nonterminal "Identifiers", Terminal "}", Terminal "[", Nonterminal "LocFunTypes", Terminal "]", Nonterminal "AssignExpr"],
 ProductionRule "DerefExpr" [Terminal "!", Terminal "{", Nonterminal "Identifiers", Terminal "}", Terminal "[", Nonterminal "LocFunTypes", Terminal "]", Nonterminal "DerefExpr"],
 ProductionRule "DerefExpr" [Nonterminal "LogicOr"],
 ProductionRule "LogicOr" [Nonterminal "LogicOr", Terminal "or", Nonterminal "LogicAnd"],
 ProductionRule "LogicOr" [Nonterminal "LogicAnd"],
 ProductionRule "LogicAnd" [Nonterminal "LogicAnd", Terminal "and", Nonterminal "CompEqNeq"],
 ProductionRule "LogicAnd" [Nonterminal "CompEqNeq"],
 ProductionRule "CompEqNeq" [Nonterminal "CompEqNeq", Terminal "==", Nonterminal "Comp"],
 ProductionRule "CompEqNeq" [Nonterminal "CompEqNeq", Terminal "!=", Nonterminal "Comp"],
 ProductionRule "CompEqNeq" [Nonterminal "Comp"],
 ProductionRule "Comp" [Nonterminal "Comp", Terminal "<", Nonterminal "ArithAddSub"],
 ProductionRule "Comp" [Nonterminal "Comp", Terminal "<=", Nonterminal "ArithAddSub"],
 ProductionRule "Comp" [Nonterminal "Comp", Terminal ">", Nonterminal "ArithAddSub"],
 ProductionRule "Comp" [Nonterminal "Comp", Terminal ">=", Nonterminal "ArithAddSub"],
 ProductionRule "Comp" [Nonterminal "ArithAddSub"],
 ProductionRule "ArithAddSub" [Nonterminal "ArithAddSub", Terminal "+", Nonterminal "ArithMulDiv"],
 ProductionRule "ArithAddSub" [Nonterminal "ArithAddSub", Terminal "-", Nonterminal "ArithMulDiv"],
 ProductionRule "ArithAddSub" [Nonterminal "ArithMulDiv"],
 ProductionRule "ArithMulDiv" [Nonterminal "ArithMulDiv", Terminal "*", Nonterminal "ArithUnary"],
 ProductionRule "ArithMulDiv" [Nonterminal "ArithMulDiv", Terminal "/", Nonterminal "ArithUnary"],
 ProductionRule "ArithMulDiv" [Nonterminal "ArithUnary"],
 ProductionRule "ArithUnary" [Terminal "-", Nonterminal "Term"],
 ProductionRule "ArithUnary" [Nonterminal "Term"],
 ProductionRule "Term" [Terminal "identifier"],
 ProductionRule "Term" [Terminal "integer"],
 ProductionRule "Term" [Terminal "string"],
 ProductionRule "Term" [Terminal "boolean"],
 ProductionRule "Term" [Terminal "(", Terminal ")"],
 ProductionRule "Term" [Terminal "(", Nonterminal "LExpr", Terminal ")"]
]
